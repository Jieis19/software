import math
import io
import matplotlib.pyplot as plt
from flask import Flask, request, send_file
from linebot import LineBotApi, WebhookHandler
from linebot.models import MessageEvent, TextMessage, ImageSendMessage
from linebot.exceptions import InvalidSignatureError

# === 你的 LINE Bot Token / Secret ===
LINE_CHANNEL_ACCESS_TOKEN = "你的 Channel Access Token"
LINE_CHANNEL_SECRET = "你的 Channel Secret"

line_bot_api = LineBotApi(LINE_CHANNEL_ACCESS_TOKEN)
handler = WebhookHandler(LINE_CHANNEL_SECRET)

app = Flask(__name__)

# ====== Haversine 計算距離 ======
def haversine(lon1, lat1, lon2, lat2):
    R = 6371
    dlon = math.radians(lon2 - lon1)
    dlat = math.radians(lat2 - lat1)
    a = math.sin(dlat / 2) ** 2 + math.cos(math.radians(lat1)) * math.cos(math.radians(lat2)) * math.sin(dlon / 2) ** 2
    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))
    return R * c

# ====== 動態生成圖片 ======
@app.route("/plot")
def send_plot():
    # 範例：台北 (25.033, 121.565) 到 高雄 (22.627, 120.301)
    lat1, lon1, label1 = 25.033, 121.565, "台北"
    lat2, lon2, label2 = 22.627, 120.301, "高雄"
    distance = haversine(lon1, lat1, lon2, lat2)

    buf = io.BytesIO()
    plt.figure(figsize=(6,6))
    plt.scatter([lon1, lon2], [lat1, lat2], color="red")
    plt.plot([lon1, lon2], [lat1, lat2], "b--")
    plt.text(lon1, lat1, f" {label1}", color="red")
    plt.text(lon2, lat2, f" {label2}", color="red")
    plt.text((lon1+lon2)/2, (lat1+lat2)/2, f"{distance:.2f} km", color="blue", ha="center")
    plt.title("兩點示意圖")
    plt.savefig(buf, format="png")
    plt.close()
    buf.seek(0)
    return send_file(buf, mimetype="image/png")

# ====== LINE Bot Webhook ======
@app.route("/callback", methods=['POST'])
def callback():
    signature = request.headers['X-Line-Signature']
    body = request.get_data(as_text=True)
    try:
        handler.handle(body, signature)
    except InvalidSignatureError:
        return "Invalid signature", 400
    return "OK", 200

# ====== 文字訊息觸發產生圖片 ======
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    if event.message.text == "示意圖":
        image_url = "https://你的render網址.onrender.com/plot"
        message = ImageSendMessage(
            original_content_url=image_url,
            preview_image_url=image_url
        )
        line_bot_api.reply_message(event.reply_token, message)
    else:
        line_bot_api.reply_message(event.reply_token, 
            TextMessage(text="輸入『示意圖』即可查看兩點距離圖"))

# ====== 主程式 ======
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)