<!doctype html>
<html lang="zh-Hant">
<head> 
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>LINE 掛號預約示範（含醫生選擇）</title>
  <style>
    :root{
      --bg:#f6f8fa;
      --card:#ffffff;
      --accent:#0f6fff;
      --muted:#6b7280;
      --radius:12px;
      --shadow: 0 6px 20px rgba(16,24,40,0.06);
      font-family: system-ui, -apple-system, "Segoe UI", Roboto, "Noto Sans TC", "Helvetica Neue", Arial;
    }
    html,body{height:100%}
    body{
      margin:0;
      background:linear-gradient(180deg,var(--bg), #eef2ff 100%);
      display:flex;
      align-items:center;
      justify-content:center;
      padding:24px;
      color:#111827;
    }
    .container{
      width:100%;
      max-width:920px;
      background:var(--card);
      border-radius:var(--radius);
      box-shadow:var(--shadow);
      padding:20px;
    }
    header{display:flex;gap:12px;align-items:center;margin-bottom:8px}
    header h1{margin:0;font-size:20px}
    header p{margin:0;color:var(--muted);font-size:13px}
    .row{display:flex;gap:12px;flex-wrap:wrap;margin-top:12px}
    .col{flex:1;min-width:180px}
    label{display:block;font-size:12px;color:var(--muted);margin-bottom:6px}
    select,input[type="text"],input[type="datetime-local"],button{
      width:100%;padding:10px 12px;border-radius:10px;
      border:1px solid #e6e9ef;background:white;box-sizing:border-box;font-size:14px
    }
    button{background:var(--accent);color:white;border:none;cursor:pointer;font-weight:600;transition:transform .08s ease}
    button:active{transform:scale(.995)}
    .muted{color:var(--muted);font-size:13px;margin-top:8px}
    .card{background:linear-gradient(180deg,#fff,#fbfdff);padding:12px;border-radius:10px;border:1px solid #eff3ff}
    .notice{margin-top:12px;padding:10px;border-radius:10px}
    .notice.success{background:#ecfdf5;color:#065f46}
    .notice.error{background:#fff1f2;color:#9f1239}
    .hidden{display:none;}
    @media (max-width:640px){.row{flex-direction:column}}
  </style>
</head>
<body>
  <div class="container">
    <header>
      <div>
        <h1>LINE 掛號預約（含醫生選擇）</h1>
        <p>縣市 → 醫院 → 科別 → 醫生 → 時段 → 送出。</p>
      </div>
      <div style="margin-left:auto;text-align:right">
        <div id="profileName" class="muted">尚未連線</div>
        <div style="margin-top:6px">
          <button id="btnOpenLiff" style="padding:6px 10px;background:#00c300;border-radius:8px;border:none;color:white">在 LINE 開啟</button>
        </div>
      </div>
    </header>

    <main>
      <div class="card">
        <div class="row">
          <div class="col">
            <label for="selectCity">選擇縣市</label>
            <select id="selectCity"><option value="">— 請選縣市 —</option></select>
          </div>
          <div class="col">
            <label for="selectHospital">選擇醫院</label>
            <select id="selectHospital"><option value="">— 請選醫院 —</option></select>
          </div>
        </div>

        <div class="row">
          <div class="col">
            <label for="selectClinic">選擇科別</label>
            <select id="selectClinic"><option value="">— 請選科別 —</option></select>
          </div>
          <div class="col">
            <label for="selectDoctor">選擇醫生</label>
            <select id="selectDoctor"><option value="">— 請選醫生 —</option></select>
          </div>
        </div>

        <div class="row">
          <div class="col">
            <label for="inputDatetime">預約時間</label>
            <input id="inputDatetime" type="datetime-local" />
          </div>
          <div class="col">
            <label for="inputNote">備註</label>
            <input id="inputNote" type="text" placeholder="輸入備註（可留空）" />
          </div>
        </div>

        <div style="margin-top:14px">
          <button id="btnSubmit">送出預約</button>
          <div id="message" class="notice hidden"></div>
        </div>
      </div>
    </main>
  </div>

  <script>
    let HOSPITALS = [];

    const el = {
      selectCity: document.getElementById('selectCity'),
      selectHospital: document.getElementById('selectHospital'),
      selectClinic: document.getElementById('selectClinic'),
      selectDoctor: document.getElementById('selectDoctor'),
      inputDatetime: document.getElementById('inputDatetime'),
      inputNote: document.getElementById('inputNote'),
      btnSubmit: document.getElementById('btnSubmit'),
      message: document.getElementById('message')
    };

    async function loadHospitals() {
      try {
        const res = await fetch('hospitals.json'); // 若用 Flask 請改成 /static/hospitals.json
        HOSPITALS = await res.json();
        populateCities();
      } catch (e) {
        showMessage('❌ 無法載入醫院資料', 'error');
        console.error(e);
      }
    }

    function showMessage(msg, type='success') {
      el.message.textContent = msg;
      el.message.className = `notice ${type}`;
      el.message.classList.remove('hidden');
      setTimeout(()=> el.message.classList.add('hidden'), 4000);
    }

    function populateCities(){
      const cities = [...new Set(HOSPITALS.map(h=>h.city))];
      el.selectCity.innerHTML = '<option value="">— 請選縣市 —</option>';
      cities.forEach(c=>{
        const o = document.createElement('option');
        o.value=c; o.textContent=c;
        el.selectCity.appendChild(o);
      });
      el.selectHospital.innerHTML='<option>— 請選醫院 —</option>';
      el.selectClinic.innerHTML='<option>— 請選科別 —</option>';
      el.selectDoctor.innerHTML='<option>— 請選醫生 —</option>';
    }

    function populateHospitals(city){
      el.selectHospital.innerHTML = '<option value="">— 請選醫院 —</option>';
      HOSPITALS.filter(h=>h.city===city).forEach(h=>{
        const o=document.createElement('option');
        o.value=h.id;o.textContent=h.name;
        el.selectHospital.appendChild(o);
      });
      el.selectClinic.innerHTML='<option>— 請選科別 —</option>';
      el.selectDoctor.innerHTML='<option>— 請選醫生 —</option>';
    }

    function populateClinics(hid){
      const h=HOSPITALS.find(x=>x.id===hid);
      el.selectClinic.innerHTML='<option>— 請選科別 —</option>';
      el.selectDoctor.innerHTML='<option>— 請選醫生 —</option>';
      if(!h) return;
      h.clinics.forEach(c=>{
        const o=document.createElement('option');
        o.value=c.id;o.textContent=c.name;
        el.selectClinic.appendChild(o);
      });
    }

    function populateDoctors(hid, cid){
      const h=HOSPITALS.find(x=>x.id===hid);
      const c=h?.clinics.find(x=>x.id===cid);
      el.selectDoctor.innerHTML='<option>— 請選醫生 —</option>';
      if(!c) return;
      c.doctors.forEach(d=>{
        const o=document.createElement('option');
        o.value=d.id;o.textContent=d.name;
        el.selectDoctor.appendChild(o);
      });
    }

    el.selectCity.addEventListener('change', ()=> populateHospitals(el.selectCity.value));
    el.selectHospital.addEventListener('change', ()=> populateClinics(el.selectHospital.value));
    el.selectClinic.addEventListener('change', ()=> populateDoctors(el.selectHospital.value, el.selectClinic.value));

    el.btnSubmit.addEventListener('click', ()=>{
      const city=el.selectCity.value,
            h=el.selectHospital.value,
            c=el.selectClinic.value,
            d=el.selectDoctor.value,
            t=el.inputDatetime.value;
      if(!city||!h||!c||!d||!t){ showMessage('請完整選擇各項資料', 'error'); return; }
      showMessage(`✅ 預約成功！
縣市：${city}
醫院：${el.selectHospital.options[el.selectHospital.selectedIndex].text}
科別：${el.selectClinic.options[el.selectClinic.selectedIndex].text}
醫生：${el.selectDoctor.options[el.selectDoctor.selectedIndex].text}
時間：${t}`, 'success');
    });

    // 頁面啟動時載入 JSON
    loadHospitals();
  </script>
</body>
</html>



[
  {
    "id": "h001",
    "name": "新竹馬偕兒童醫院",
    "city": "新竹市",
    "clinics": [
      {
        "id": "c001",
        "name": "新生兒科",
        "doctors": [
          { "id": "d001", "name": "宋聿翔" },
          { "id": "d002", "name": "陳政偉" },
          { "id": "d003", "name": "劉子瑜" },
          { "id": "d004", "name": "柯信如" }
        ]
      },
      {
        "id": "c002",
        "name": "小兒科",
        "doctors": [
          { "id": "d005", "name": "張育豪" },
          { "id": "d006", "name": "李采萱" }
        ]
      }
    ]
  },
  {
    "id": "h002",
    "name": "台中良友醫院",
    "city": "台中市",
    "clinics": [
      {
        "id": "c010",
        "name": "皮膚科",
        "doctors": [
          { "id": "d010", "name": "王美麗" },
          { "id": "d011", "name": "陳建宇" }
        ]
      },
      {
        "id": "c011",
        "name": "復健科",
        "doctors": [
          { "id": "d012", "name": "李淑芬" }
        ]
      }
    ]
  }
]

<script>
let HOSPITALS = [];

const el = {
  selectCity: document.getElementById('selectCity'),
  selectHospital: document.getElementById('selectHospital'),
  selectClinic: document.getElementById('selectClinic'),
  selectDoctor: document.getElementById('selectDoctor'),
  inputDatetime: document.getElementById('inputDatetime'),
  inputNote: document.getElementById('inputNote'),
  btnSubmit: document.getElementById('btnSubmit'),
  message: document.getElementById('message')
};

// 🚀 載入 hospitals.json
async function loadHospitals() {
  try {
    const res = await fetch('hospitals.json'); // 本地同目錄放 hospitals.json
    if (!res.ok) throw new Error('載入失敗');
    HOSPITALS = await res.json();
    populateCities();
  } catch (e) {
    alert('❌ 無法載入醫院資料，請確認 hospitals.json 是否存在');
    console.error(e);
  }
}

function populateCities() {
  const cities = [...new Set(HOSPITALS.map(h => h.city))];
  el.selectCity.innerHTML = '<option value="">— 請選縣市 —</option>';
  cities.forEach(c => {
    const o = document.createElement('option');
    o.value = c;
    o.textContent = c;
    el.selectCity.appendChild(o);
  });
}

function populateHospitals(city) {
  el.selectHospital.innerHTML = '<option value="">— 請選醫院 —</option>';
  HOSPITALS.filter(h => h.city === city).forEach(h => {
    const o = document.createElement('option');
    o.value = h.id;
    o.textContent = h.name;
    el.selectHospital.appendChild(o);
  });
  el.selectClinic.innerHTML = '<option>— 請選科別 —</option>';
  el.selectDoctor.innerHTML = '<option>— 請選醫生 —</option>';
}

function populateClinics(hid) {
  const h = HOSPITALS.find(x => x.id === hid);
  el.selectClinic.innerHTML = '<option>— 請選科別 —</option>';
  el.selectDoctor.innerHTML = '<option>— 請選醫生 —</option>';
  if (!h) return;
  h.clinics.forEach(c => {
    const o = document.createElement('option');
    o.value = c.id;
    o.textContent = c.name;
    el.selectClinic.appendChild(o);
  });
}

function populateDoctors(hid, cid) {
  const h = HOSPITALS.find(x => x.id === hid);
  const c = h?.clinics.find(x => x.id === cid);
  el.selectDoctor.innerHTML = '<option>— 請選醫生 —</option>';
  if (!c) return;
  c.doctors.forEach(d => {
    const o = document.createElement('option');
    o.value = d.id;
    o.textContent = d.name;
    el.selectDoctor.appendChild(o);
  });
}

// 監聽
el.selectCity.addEventListener('change', () => populateHospitals(el.selectCity.value));
el.selectHospital.addEventListener('change', () => populateClinics(el.selectHospital.value));
el.selectClinic.addEventListener('change', () => populateDoctors(el.selectHospital.value, el.selectClinic.value));

el.btnSubmit.addEventListener('click', () => {
  const city = el.selectCity.value,
        h = el.selectHospital.value,
        c = el.selectClinic.value,
        d = el.selectDoctor.value,
        t = el.inputDatetime.value;

  if (!city || !h || !c || !d || !t) {
    alert('請完整選擇各項資料');
    return;
  }

  const hospitalName = el.selectHospital.options[el.selectHospital.selectedIndex].text;
  const clinicName = el.selectClinic.options[el.selectClinic.selectedIndex].text;
  const doctorName = el.selectDoctor.options[el.selectDoctor.selectedIndex].text;

  alert(`✅ 預約成功！
縣市：${city}
醫院：${hospitalName}
科別：${clinicName}
醫生：${doctorName}
時間：${t}`);
});

// 頁面載入時執行
loadHospitals();
</script>








import requests, re, json
from bs4 import BeautifulSoup

proxies = {
    'https': '172.17.22.161:8080'
}

headers = {
    'Cookie': 'JSESSIONID=B30369CD9915669244ED216C5CE8428D',
    'Content-Type': 'application/x-www-form-urlencoded'
}

url_main = "https://www.ntuh.gov.tw/ntuh/Fpage.action?muid=82&fid=3276"
response = requests.get(url_main, headers=headers, proxies=proxies, verify=False)
soup = BeautifulSoup(response.text, 'html.parser')

div_rows = soup.find_all("div", class_="divTableRow")
urls = []
if len(div_rows) >= 2:
    second_div_row = div_rows[1]
    urls = [a["href"] for a in second_div_row.find_all("a", href=True) if 'Index.action' in a["href"]]

# 準備存 JSON
hospital_json = []

# 這裡假設只有一間醫院，可以改成自動抓醫院名稱
hospital_id = "h001"
hospital_name = "台大醫院兒童醫學部"
hospital_city = "台北市"

clinics_list = []
doctor_counter = 1  # d001 開始計數

for list_ in urls:
    base_url = f"https://www.ntuh.gov.tw{list_.split('/Index.action')[0]}/VcardAjax.action"

    # 嘗試用 URL 中的最後一段作為科別名稱
    clinic_name = list_.split('/')[-1].replace('Index.action', '').strip() or "未命名科別"
    clinic_id = f"c{len(clinics_list)+1:03d}"

    # 先抓一次 POST 看總頁數
    payload = 'jobType=-1&q_seekValue=&q_order=&pagenum=1'
    response = requests.post(base_url, headers=headers, data=payload, proxies=proxies, verify=False)
    data = response.json()
    total_pages = data.get("totalPages", 1)

    doctors_list = []
    for page in range(1, total_pages + 1):
        payload = f'jobType=-1&q_seekValue=&q_order=&pagenum={page}'
        response = requests.post(base_url, headers=headers, data=payload, proxies=proxies, verify=False)
        data = response.json()

        for item in data.get("teacherList", []):
            if "cname" in item and item.get("medicalExpert"):
                first_part = re.split(r"[;,、]", item["medicalExpert"])[0].strip()
                doctors_list.append({
                    "id": f"d{doctor_counter:03d}",
                    "name": first_part
                })
                doctor_counter += 1

    clinics_list.append({
        "id": clinic_id,
        "name": clinic_name,
        "doctors": doctors_list
    })

hospital_json.append({
    "id": hospital_id,
    "name": hospital_name,
    "city": hospital_city,
    "clinics": clinics_list
})

# 輸出 JSON
with open("ntuh_doctors.json", "w", encoding="utf-8") as f:
    json.dump(hospital_json, f, ensure_ascii=False, indent=2)

print("✅ 已生成 ntuh_doctors.json")













import requests, re, json

proxies = {
    'https': '172.17.22.161:8080'
}

headers = {
    'Cookie': 'JSESSIONID=B30369CD9915669244ED216C5CE8428D',
    'Content-Type': 'application/x-www-form-urlencoded'
}

url_main = "https://www.ntuh.gov.tw/ntuh/Fpage.action?muid=82&fid=3276"
response = requests.get(url_main, headers=headers, proxies=proxies, verify=False)
from bs4 import BeautifulSoup
soup = BeautifulSoup(response.text, 'html.parser')

div_rows = soup.find_all("div", class_="divTableRow")
urls = []
if len(div_rows) >= 2:
    second_div_row = div_rows[1]
    urls = [a["href"] for a in second_div_row.find_all("a", href=True) if 'Index.action' in a["href"]]

# 準備存 JSON
hospital_id = "h001"
hospital_name = "台大醫院兒童醫學部"
hospital_city = "台北市"

clinics_dict = {}  # 先用 dict 方便去重
doctor_counter = 1

for list_ in urls:
    base_url = f"https://www.ntuh.gov.tw{list_.split('/Index.action')[0]}/VcardAjax.action"

    # 先抓一次 POST 看總頁數
    payload = 'jobType=-1&q_seekValue=&q_order=&pagenum=1'
    response = requests.post(base_url, headers=headers, data=payload, proxies=proxies, verify=False)
    data = response.json()
    total_pages = data.get("totalPages", 1)

    for page in range(1, total_pages + 1):
        payload = f'jobType=-1&q_seekValue=&q_order=&pagenum={page}'
        response = requests.post(base_url, headers=headers, data=payload, proxies=proxies, verify=False)
        data = response.json()

        for item in data.get("teacherList", []):
            if "cname" in item and item.get("medicalExpert"):
                clinic_name = re.split(r"[;,、]", item["medicalExpert"])[0].strip()
                doctor_name = item["cname"].strip()

                if clinic_name not in clinics_dict:
                    clinics_dict[clinic_name] = []

                clinics_dict[clinic_name].append({
                    "id": f"d{doctor_counter:03d}",
                    "name": doctor_name
                })
                doctor_counter += 1

# 將 dict 轉成 list
clinics_list = []
for idx, (clinic_name, doctors) in enumerate(clinics_dict.items(), start=1):
    clinics_list.append({
        "id": f"c{idx:03d}",
        "name": clinic_name,
        "doctors": doctors
    })

hospital_json = [{
    "id": hospital_id,
    "name": hospital_name,
    "city": hospital_city,
    "clinics": clinics_list
}]

# 儲存成 JSON
with open("ntuh_doctors.json", "w", encoding="utf-8") as f:
    json.dump(hospital_json, f, ensure_ascii=False, indent=2)

print("✅ 已生成 ntuh_doctors.json")



